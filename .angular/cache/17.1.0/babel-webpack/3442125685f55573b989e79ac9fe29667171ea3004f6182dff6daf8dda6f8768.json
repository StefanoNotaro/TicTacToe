{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SquareComponent } from './square/square.component';\nimport { BoardComponent } from './board/board.component';\nimport { CommonModule } from '@angular/common';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nexport class AppModule {\n  static #_ = this.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [CommonModule, BrowserModule, AppRoutingModule, ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, SquareComponent, BoardComponent],\n    imports: [CommonModule, BrowserModule, AppRoutingModule, i1.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","AppRoutingModule","AppComponent","SquareComponent","BoardComponent","CommonModule","ServiceWorkerModule","environment","AppModule","_","_2","bootstrap","_3","register","enabled","production","registrationStrategy","declarations","imports","i1"],"sources":["C:\\Users\\stefa\\OneDrive\\Documentos\\Code Repositories\\Github\\TicTacToe\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SquareComponent } from './square/square.component';\r\nimport { BoardComponent } from './board/board.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SquareComponent,\r\n    BoardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      // Register the ServiceWorker as soon as the app is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,WAAW,QAAQ,6BAA6B;;;AAsBzD,OAAM,MAAOC,SAAS;EAAA,QAAAC,CAAA,G;qBAATD,SAAS;EAAA;EAAA,QAAAE,EAAA,G;UAATF,SAAS;IAAAG,SAAA,GAFRT,YAAY;EAAA;EAAA,QAAAU,EAAA,G;cAXtBP,YAAY,EACZL,aAAa,EACbC,gBAAgB,EAChBK,mBAAmB,CAACO,QAAQ,CAAC,gBAAgB,EAAE;MAC7CC,OAAO,EAAEP,WAAW,CAACQ,UAAU;MAC/B;MACA;MACAC,oBAAoB,EAAE;KACvB,CAAC;EAAA;;;2EAKOR,SAAS;IAAAS,YAAA,GAlBlBf,YAAY,EACZC,eAAe,EACfC,cAAc;IAAAc,OAAA,GAGdb,YAAY,EACZL,aAAa,EACbC,gBAAgB,EAAAkB,EAAA,CAAAb,mBAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}